name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Allow Claude to run development and testing commands
          allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run dev),Bash(npm run test:*),Bash(npm run lint:*),Bash(npm run type-check),Bash(npm run validate:*)"
          
          # Custom instructions for Claude to customize its behavior for this project
          custom_instructions: |
            You are working on a Next.js 14 e-commerce platform using TypeScript, Supabase, and Stripe.
            
            Key guidelines:
            - Follow the patterns in CLAUDE.md project instructions
            - Use the existing component architecture (atomic design)
            - Maintain TypeScript strict typing
            - Test changes with stub APIs when database access isn't available
            - Follow the established cart context and authentication patterns
            - Use shadcn/ui components consistently
            - Ensure mobile-first responsive design
            - Apply proper error handling and loading states
            - Use the existing API route structure (/app/api/)
            - Follow security best practices for auth and payments
          
          # Environment variables for Claude development context
          claude_env: |
            NODE_ENV: development
            NEXT_PUBLIC_USE_STUBS: true
            IGNORE_TS_ERRORS: false

